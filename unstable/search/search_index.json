{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Instructions","text":""},{"location":"#linux-setup","title":"Linux Setup","text":"<p>Assumptions:</p> <ul> <li>You have installed X-Plane 11.50+</li> <li>You have a reasonably fast CPU and broadband internet </li> <li>FUSE is installed and setup (Enable <code>user_allow_other</code> in /etc/fuse.conf, if not already the case.) </li> </ul>"},{"location":"#steps","title":"Steps:","text":"<ol> <li>Download the most recent packaged release (autortho_lin_####.bin) from here</li> <li>Make executable if needed <code>chmod +x autoortho_lin.bin</code> </li> <li>Run the program <code>./autoortho_lin.bin</code></li> <li>Configure your settings and paths for your system </li> <li>Download and setup an ortho set from the 'Scenery' tab.</li> <li>Click 'Run' to run the program</li> <li>Configure your scenery_packs.ini file appropriately</li> <li>Run X-Plane and choose a location for an ortho set you have downloaded</li> </ol>"},{"location":"#windows-setup","title":"Windows Setup","text":"<p>Assumptions:</p> <ul> <li>You are running 64bit Windows 10+</li> <li>You have install X-Plane 11.50+</li> <li>You have setup and configured either: Dokan or WinFSP</li> <li> <ul> <li>If you have trouble with one, try the other!      Some users on Windows 11 have better luck     with WinFSP for some reason.  Windows users should always attempt both before asking questions on forums!!! </li> </ul> </li> <li> <ul> <li>If both Dokan and WinFSP are installed, Dokan will be preferred.      Users can force preferring WinFSP by setting prefer_winfsp=True in their config file.</li> </ul> </li> <li>You install all components, including scenery, on a local NTFS drive.</li> </ul>"},{"location":"#zip-file-steps","title":"Zip File Steps:","text":"<ol> <li>Download the most recent packaged release (autoortho_win_####.zip) from here</li> <li>Extract the downloaded directory.</li> <li>Run <code>autoortho_win.exe</code> from within the extracted dir.</li> <li>Configure your settings and paths for your system </li> <li>Download and setup an ortho set from the 'Scenery' tab.</li> <li>Click 'Run' to run the program</li> <li>Configure your scenery_packs.ini file appropriately </li> <li>Run X-Plane and choose a location for an ortho set you have downloaded</li> </ol>"},{"location":"#experimental-installer-steps","title":"Experimental Installer Steps:","text":"<p>Alternatively, there is now an installer that can be used.  This is experimental ATM:</p> <ol> <li>Download the most recent packaged release (AutoOrtho_####.exe) from here</li> <li>Run the program.</li> <li>If there is a prior install you will be prompted to uninstall first.  Do    this.</li> <li>Run AutoOrtho from your system start menu.</li> <li>Configure your settings and paths for your system </li> <li>Download and setup an ortho set from the 'Scenery' tab.</li> <li>Click 'Run' to run the program</li> <li>Configure your scenery_packs.ini file appropriately </li> <li>Run X-Plane and choose a location for an ortho set you have downloaded</li> </ol>"},{"location":"#macos-setup","title":"MacOS Setup","text":"<p>Assumptions:</p> <ul> <li>You have installed X-Plane 11.50+</li> <li>You have an Apple Silicon Computer (AutoOrtho Mac only supports arm64)</li> <li>FUSE is installed, MacFuse and Fuse-T are supported. </li> </ul>"},{"location":"#steps_1","title":"Steps:","text":"<ol> <li>If you haven't install MacFuse or Fuse-T. Fuse-T was used for testing the mac binary but both should work.</li> <li>Download the most recent packaged release (autortho_mac_####.zip) from here</li> <li>Unzip on the location you want.</li> <li>Run the program <code>AutoOrtho.App</code></li> <li>Important This program is currently unsigned, a warning will appear on first run, you need to go into Settings -&gt; Privacy and Security -&gt; Allow <code>AutoOrtho.App</code> execution -&gt; Open Anyway.</li> <li>Configure your settings and paths for your system </li> <li>Download and setup an ortho set from the 'Scenery' tab.</li> <li>Click 'Run' to run the program</li> <li>Configure your scenery_packs.ini file appropriately</li> <li>Run X-Plane and choose a location for an ortho set you have downloaded</li> </ol>"},{"location":"#configuring-your-scenery_packsini","title":"Configuring your scenery_packs.ini","text":"<p>Use this image as a guide on how to order your X-Plane packages within the scenery_packs.ini file.</p> <p>scenery_packs.ini_config</p>"},{"location":"#requirements-and-compatibility","title":"Requirements and Compatibility","text":"<p>To run from source, this project requires python3.x and all pre-requisites in the <code>requirements.txt</code> file.  Also, a copy of X-Plane 11.50+ of course.</p> <p>Most testing is done on Ubuntu 22.04 using FUSE.  Other Linux flavors ought to work as well.  MacOS very likely should work, but I have no way of testing it.</p> <p>I have done testing on Windows 10 with the Dokan project. This does appear to work fine, but this is not how I use this project, so it's not my primary concern.</p>"},{"location":"#known-issues-and-limits","title":"Known issues and limits","text":"<ul> <li>Currently I try to limit the memory usage, though it's possible it   will exceed this in certain scenarios.</li> <li>Not really possible to post-process the satellite photos.  You get what you   get.</li> <li>Will add a couple minutes to initial flight time for new areas.  That's to   be expected though.</li> <li>Will require and use a lot of internet requests (surprise!) and writes a lot of small files locally.   There are many parts along your path that may need tuning or may not like this (ISP, DNS, Wifi, drive speed, CPU speed, etc).   User's should be ready to diagnose their specific setup and determine if this project fits withing their own personal computing requirements.</li> <li>Windows has too many variations with how filesystems are handled, links are   done, intrusive malware detection systems, etc and will likely always be   slower and more difficult to use with this project.</li> </ul>"},{"location":"#todos","title":"TODOS","text":"<ul> <li>~See if this will work on Windows with WinFSP~ </li> <li>~Allow for overriding the satellite source type.  Since this pulls on the fly, we aren't stuck with what was setup initially with Ortho4XP.~</li> <li>~Package a set of DSF files to get started with~</li> <li>Attempt to make a workable OSX version</li> </ul>"},{"location":"#warnings-warranty-etc","title":"Warnings, Warranty, etc","text":"<p>This project is provided free of charge and is not warrantied in any way.  Use at your own risk.</p> <p>Accessing map data from 3rd parties may or may not be allowed and is up to you the end user to determine and use appropriately.</p>"},{"location":"config/","title":"Configuration","text":"<p>Setup and configuration for most use cases should be pretty simple. The important settings are:</p> <ul> <li>Scenery install path</li> <li>X-Plane install path</li> <li>Downloader directory</li> </ul>"},{"location":"config/#scenery-install-path","title":"Scenery install path","text":"<p>This is the location that scenery will be installed to.  Previously this defaulted to a user's existing X-Plane Custom Scenery directory, but that is no longer the case.  </p> <p>It should be possible to set this to a convenient location with enough room to install scenery packages.  Each scenery package can take around 20-30GB.</p> <p>This can be an external NAS or separate drive, but I have not tried all drive combinations.  Speed of external storage will naturally impact performance to a certain degree.  Plan accordingly.</p>"},{"location":"config/#x-plane-install-path","title":"X-Plane install path","text":"<p>This is the X-Plane install location.  Under this directory should be X-Plane's <code>Custom Scenery</code> directory.  IT IS IMPORTANT THIS IS THE CORRECT LOCATION</p> <p>From this directory AutoOrtho will create mount points and run the program.</p> <p>IF THIS IS NOT CORRECT THINGS WILL NOT WORK RIGHT</p>"},{"location":"config/#download-directory","title":"Download directory","text":"<p>This is the path that will be used to temporarily store zip files and other fetched files for scenery setup.  By default this will be in under the user's home dir under <code>.autoortho-data/downloads</code></p> <p>For Windows users, it is highly recommended to set a Windows Defender exception to this directory otherwise expect VERY slow setup of scenery.</p> <p>This folder can be set to any convenient location with enough space for scenery downloads (20-30GB per).</p>"},{"location":"config/#user-config-file-location","title":"User config file location","text":"<p>The configuration file <code>.autoortho</code> is located in the user's home directory.  </p>"},{"location":"details/","title":"Approach","text":"<p>There does not appear to be a way to hook directly into the internal texture loading mechanism of X-Plane via plugins.  Instead, this project acts as a virtual file system interface for orthophoto satellite imagery.</p> <p>As needed, imagery is downloaded from the indicated satellite photo sources as areas are requested.  Imagery files are detected by naming convention of <code>{row}_{col}_{maptype}_{zoomlevel}.dds</code>  This is the standard convention for imagery created from Ortho4XP.</p>"},{"location":"details/#how-does-x-plane-access-scenery","title":"How does X-Plane access scenery?","text":"<p>Let's look at how X-Plane accesses scenery.  In the install directory of X-Plane there will be a <code>Custom Scenery</code> folder.  Under this folder there will be a number of sub directories of scenery and a <code>scenery_packs.ini</code> configuration file.  This is where X-Plane will look for scenery.</p> <p>Under each scenery subdirectory, there will be an <code>Earth Nav Data</code> directory that contains a number of lat-lon named subdirectories.  Under these subdirectories will be a number of DSF files that contain instructions for X-Plane for this set of coordinates.</p> <p>These DSF files are picked up by X-Plane based on the area that you are flying.  During flight initialization a set of these files around your takeoff location are loaded.  While flying new DSF files will be loaded.  This loading while flying happens asynchronously behind the scenes.</p> <p>The DSF files can contain various instructions for X-Plane.  What we are interested in for orthophotos are terrain files.  The terrain files a DSF contains would then point to the textures requested for this terrain, including satellite photo textures.  These files are typically <code>.dds</code> files, though that's not always the case.</p> <p>DDS files can contain multiple copies of the same texture at reduced resolutions.  These are referred to as 'mipmaps'.  This allows X-Plane to just pull in the minimum amount of data that is required into memory at any given time.  Typically the maximum resolution for a texture is only required while flying low and for close by tetxures.</p>"},{"location":"details/#how-this-project-leverages-this-setup-high-level-description","title":"How this project leverages this setup (high level description)","text":"<p>This project effectively requires all the parts of normal orthophoto satellite imagery, except for the satellite photos themselves.</p> <p>Existing mechanisms to create and manage DSF files, and related terrain files, still applies.  X-Plane continues to reference these files as per normal.</p> <p>This program will detect when DDS files are accessed and read from X-Plane. When X-Plane attempts to read a specific mipmap of a texture this program will pull down just the minimum required data and return this data to X-Plane. This happens behind the scenes and as far as X-Plane is concerned, it is continuing to read a normal filesystem.</p> <p>Since we only download the minimum required data, this process is relatively efficient.</p> <p>Data is cached in memory until a memory limit is reached, at which time older data will be purged.</p>"},{"location":"details/#expert-usage-and-overriding-defaults","title":"Expert Usage and Overriding Defaults","text":""},{"location":"details/#warning","title":"Warning","text":"<p>I highly recommend using the pre-packaged scenery packs provided with this tool.  </p> <p>However, it's entirely possible to use your own scenery, if you wish.  This could be useful for situations where you want an area I haven't gotten to packaging yet, or want a different zoom level that what is provided.</p> <p>This should be considered an experts-only feature though and assumes: * You are very comfortable with the command line * You are very experienced using Ortho4XP and with installing custom scenery * You are very familiar with filesystem concepts and managing your Operating   System</p> <p>If you don't have this experience, that's okay, but likely you will struggle adding your own custom created scenery.  I would recommend that you familiarize yourself with each of these listed items before proceeding.</p>"},{"location":"details/#adding-your-own-created-sceneries","title":"Adding your own created sceneries","text":"<p>Ready to add your own sceneries? Great!</p> <p>So as mentioned above, this tool effectively overrides the 'textures' directory that XPlane is pointing to in order to location satellite imagery that is referrenced by a scenery pack's terrain files.</p> <p>Due to how XPlane identifies terrain information, these directories have been split up into reasonable sized pieces, which is why each provided scenery pack has numerous numbered directories. </p> <p>This project creates a special pass through filesystem that mounts directories into a location that XPlane can find and intercepts requests to '.dds' files.  This is handled through the magic of FUSE (Filesystem in UserSpacE).  FUSE is a common and standard feature of Linux, but requires extra stuff for other Operatings Systems.s</p> <p>Sceneries stripped of satellite imagery, likely still have coastline PNG files that must be preserved.  These are simply passed through when requested.</p> <p>You can take advantage of this setup for your own scenery that you have packaged: * Place your scenery directory in <code>Custom Scenery/z_autoortho/scenery</code></p> <p>When execute Autoortho will detect directories in that scenery dir and mount these in your configured <code>Custom Scenery</code> directory.</p>"},{"location":"details/#ortho4xp-usage-tips","title":"Ortho4XP Usage Tips","text":"<p>Ortho4XP can generate scenery files without downloading photos, which is perfect for this project.  In the config set <code>skip_downloads</code> to <code>True</code></p> <p>Since this starts with low resolution imagery until you get going, I recommend enabling <code>high_zl_airports</code></p> <p>So far I've been testing with a ZL of 16 for most tiles with increased ZL of 18 for airports.  You may have want to play around with the ZL levels for best results.</p> <p>Higher zoom levels will lead to increased resource usage and longer delays initially starting up flights.</p>"},{"location":"faq/","title":"FAQ and Troubleshooting","text":""},{"location":"faq/#general-issues","title":"General Issues","text":""},{"location":"faq/#i-see-occasional-blurry-andor-green-tiles","title":"I see occasional blurry and/or green tiles","text":"<p>There is a timeout for how long the system waits for individual satellite images.  You can adjust how long the system waits for high resolution images by adjusting the 'max_wait' setting (in seconds) in your configuration file.  Lower resolution tiles are used when available as a fall back.  The green tile is used as a last resort.</p> <p>By making this too high you risk introducing lag, stuttering, and delays. However this may need to be increased for users that are far from source servers or have slow internet connections.</p>"},{"location":"faq/#i-see-a-messge-in-the-logs-but-otherwise-things-work-fine","title":"I see a messge in the logs, but otherwise things work fine.","text":"<p>The log will log various things, typically info and warnings can be ignored unless other issues are seen.</p>"},{"location":"faq/#in-xplane-i-get-an-error-like-failed-to-find-resource-textures22304_34976_bi16dds-referenced-from-file-custom-sceneryz_eur_11terrain","title":"In XPlane I get an error like <code>Failed to find resource '../textures/22304_34976_BI16.dds', referenced from file 'Custom Scenery/z_eur_11/terrain/'.</code>","text":"<p>What's happening is that X-Plane has found a terrain file, but is not finding a linked texture.  This could be caused by a few issues:</p> <ul> <li>AutoOrtho isn't running</li> <li>You may have broken the links from your texture directories to the AutoOrtho mount location. Perhaps you manually moved around directories after downloading these from the configuration utility.</li> <li>The directory AutoOrtho is configured to run from is now different from the directory links the scenery packs point to.</li> <li>On Windows 11 try uninstalling Dokan (and reboot) and install WinFSP     instead. Or vice versa.</li> </ul> <p>First verify that AutoOrtho is running and there are no obvious errors shown in a log.  If it is running then verify that all the directory links are correct, and consider simply cleaning up and reinstalling scenery from scratch, keeping a consistent 'Custom Scenery' directory configured.</p> <p>If in doubt, re-install the scenery packs.</p>"},{"location":"faq/#something-went-wrong-with-scenery-setup-and-id-like-to-start-again-how-do-i-reinstall","title":"Something went wrong with scenery setup and I'd like to start again.  How do I reinstall?","text":"<p>AutoOrtho checks for metadata for installed scenery packs in <code>Custom Scenery/z_autoorth/**_info.json</code>  Where '**' is a shortname for each scenery pack installed.  You can delete the corresponding .json file, and re-run the configuration utility and should be able to reinstall the scenery pack</p>"},{"location":"faq/#i-installed-scenery-setup-custom-scenery-and-clicked-run-but-x-plane-did-not-automatically-startup","title":"I installed scenery, setup Custom Scenery, and clicked 'Run' but X-Plane did not automatically startup","text":"<p>You have to start X-Plane separately from this tool.  It's also best to start X-Plane after starting autoortho so that all new files and directories are picked up.</p>"},{"location":"faq/#linux-issues","title":"Linux Issues","text":""},{"location":"faq/#when-using-the-binary-release-on-linux-i-get-an-ssl-certificate_verify_failed-error","title":"When using the binary release on Linux I get an 'SSL: CERTIFICATE_VERIFY_FAILED' error","text":"<p>You may need to specify the SSL_CERT_DIR your particular operating system uses.  For example:</p> <pre><code>SSL_CERT_DIR=/etc/ssl/certs ./autoortho_lin.bin\n</code></pre> <p>Note - Possibly fixed in 1.1.0 and newer See Issue #11</p>"},{"location":"faq/#fuse-errors-ands-trange-behaviors-on-arch-based-systems","title":"FUSE errors ands trange behaviors on ARCH based systems.","text":"<p>Arch and some other systems keep FUSE2 and FUSE3 seperate when it comes to their userspace binaries (the part AutoOrtho calls to mount and map folders). Other systems like Debian based platforms (e.g. Linux Mint, Ubuntu, Etc) just use FUSE3 binaries/libraries for both FUSE2 and FUSE3 support risking breaking compatability for select usecases. Luckely AutoOrtho is not one of these, but this leaves Arch support broken for now. A solution has been identified in a python FUSE support project that expands support to FUSE3 nativly. Until resolved - a Debian based release might be your best bet. The Linux version of X-Plane 12 itself is developed on LTS releases of ubuntu, so that or their Linux Mint counterparts might be a safe starting point if you must have ortho under linux.</p>"},{"location":"faq/#on-linux-this-does-not-startgives-a-fuse-error","title":"On Linux this does not start/gives a FUSE error","text":"<p>Make sure that your <code>/etc/fuse.conf</code> files is set to <code>user_allow_other</code>.  You may need to uncomment a line.</p>"},{"location":"faq/#the-program-crashed-and-now-i-get-an-error-when-autoortho-attempts-to-mount","title":"The program crashed and now I get an error when AutoOrtho attempts to mount","text":"<p>You can clear mounts manually with the command <code>sudo umount -f AutoOrtho</code>. You may need to run this for each remaining mount.  The <code>mount</code> command will list your current mount points.</p>"},{"location":"faq/#windows-issues","title":"Windows Issues","text":""},{"location":"faq/#when-using-windows-i-see-an-error-using-the-runbat-file-such-as-note-this-error-originates-from-a-subprocess-and-is-likely-not-a-problem-with-pip-error-legacy-install-failure","title":"When using Windows I see an error using the run.bat file such as <code>note: This error originates from a subprocess, and is likely not a problem with pip. error: legacy-install-failure</code>","text":"<p>This is likely due to having a very new version of Python and a package dependency that does not have a pre-built 'wheel' binary.  Further in that error you will see a link to visual studio build tools that can be installed.  You could also try downgrading your version of Python.  For instance try uninstalling Python 3.11 and install Python 3.10.</p>"},{"location":"faq/#downloading-and-extracting-files-takes-a-very-long-time-on-windows","title":"Downloading and extracting files takes a very long time on Windows","text":"<p>This may be due to Windows Defender real time scanning be enabled.  You can temporarily disable this, which should make a difference, but it will be re-enabled automatically.</p> <p>You can exclude directories, such as `C:\\Users.autoortho-data' or wherever else you installed your download and cache directories.</p>"},{"location":"faq/#on-windows-the-executablezip-is-detected-as-a-malwarevirus-by-windows-defender","title":"On Windows the executable/zip is detected as a malware/virus by Windows Defender","text":"<p>That is a false positive.  Unfortunately, Windows is very dev and opensource unfriendly.  You can choose to ignore this false positive or not, it's your computer.  Alternatively, you can run this directly via source.</p>"},{"location":"faq/#i-get-an-error-when-running-with-scenery-installed-on-a-non-local-drive-or-non-ntfs-formatted-drive-when-using-windows","title":"I get an error when running with scenery installed on a non-local drive or non-NTFS formatted drive when using Windows","text":"<p>This is not supported. Use a local NTFS formatted drive.</p>"},{"location":"faq/#macos-issues","title":"MacOS issues","text":""},{"location":"faq/#flight-crashes-during-loading-x-plane-logs-show-no-detailed-errors","title":"Flight crashes during loading, X-Plane logs show no detailed errors.","text":"<p>AutoOrtho Tile Setup and imagery download can take up lots of time while loading the flight and X-Plane freezes in the meantime. MacOS doesn't like the app being frozen and if you click on it or change apps often the system might force close it. Crashing the Simulator. Solution: Retry loading and stay on the loading screen (be patient)</p>"},{"location":"faq/#i-have-an-issue-that-is-not-here","title":"I have an issue that is not here.","text":"<p>Please check the issues page of the repository.  Before submitting an issue please search for already existing issues for yopur problem, as it may be duplicated. If your issue has not been reported please open a new one and include as much information as possible, for example: - Screenshots - Logs - OS  - Version of AO and X-Plane you are using</p> <p>With more information the debugging process will be easier.</p> <p>After the issue is opened I'll gladly check it out as soon as my time allows. Keep in mind that this is a side project for me, so support might not be immediate. </p>"},{"location":"faq/#base-mesh-packages-problems","title":"Base Mesh Packages Problems","text":""},{"location":"faq/#i-have-an-issue-with-some-part-of-the-mesh-offered-in-the-scenery-packages","title":"I have an issue with some part of the mesh offered in the scenery packages","text":"<p>Currently this fork still uses kubilus1 base mesh, as such support is not offered for it right now, this will change with the new custom mesh. For now refer to the issues page of the kubilus scenery to see if your issue has been reported and hopefully a community fix has been shared.</p>"},{"location":"faq/#about-this-fork","title":"About this fork","text":""},{"location":"faq/#what-is-the-objective-of-this-fork","title":"What is the objective of this fork?","text":"<p>As the AutoOrtho Continued name suggests the main idea of this fork is to continue building upon kubilus1's codebase and to add more features while keeping the program updated with latest technologies, and offer active support to issues that may arise.</p>"},{"location":"faq/#what-has-been-changed","title":"What has been changed?","text":"<p>This fork currently adds a revamped new UI, more autoortho options such as overriding max zoom, and quality of life features such as new imagery servers and download retries. For more detailed information of the changes of every release please refer to the releases  page as detailed changelongs of every release are detailed there.</p>"},{"location":"faq/#whats-next","title":"What's next?","text":"<p>While the scope of this fork may change over time and soem features might never see the light of day the main things in development right now are: - MacOs Support  - Completely rebuild the Base Mesh packages with newer Otho4XP versions to have newest mesh info and take advantage of new XP12 technologies such as 3D water.</p> <p>Things in backlog that are planned be implemented later on (order does not matter): - Predictive Tile caching with Simbrief integration: Have the program monitor your flight or via simbrief flightplan infer where you are heading to and start caching imagery from further tiles to speed up loading times and decrease stutters when you reach a new area. - Tile caching monitoring: See what tiles have been loaded and cached by the software. - Merge hotbso changes to this fork to support seasons with AutoOrtho</p>"},{"location":"faq/#when-will-those-features-be-released","title":"When will those features be released?","text":"<p>There is no ETA. And there is also no guarantee of this changes being released at all. Keep in mind this is a side project that is mostly fueled by my free time, autism and hyperfixation. So development times are not guaranteed and are subject to change. </p>"},{"location":"faq/#can-i-contribute-to-help","title":"Can I contribute to help?","text":"<p>Sure! This is a community open-source project after all, and the more contributions the better. You can create your own fork and open a PR into this repo with code you would want implemented! I will review it and hopefully merge it to keep this project growing.</p>"},{"location":"faq/#want-some-idea-that-you-want-implemented-but-cant-code-it","title":"Want some idea that you want implemented but can't code it?","text":"<p>You can still contribute! Open a discussion with your feature suggestion and maybe someone or me will look at it and implement it if we find it useful or interesting!</p>"},{"location":"info/","title":"Info Attributions and Other Projects","text":"<ul> <li>Maps generated from Ortho4XP</li> <li>Slippy Mapy Tilenames</li> <li>Icon by Vital Gorbachev</li> </ul>"},{"location":"scenery/","title":"Scenery Setup","text":""},{"location":"scenery/#using-provided-sceneries","title":"Using provided sceneries","text":"<p>IMPORTANT</p> <p>The scenery packs provided with this tool that you download should be setup via the configuration utility.  This does more than simply download and extract the files.</p> <p>If you do wish to manaually manipulate these scenery packs, you should review the source code (downloader.py in particular) and understand how symlinks and/or junctions work and the limitations of each.</p> <p>If you manually move things around outside of the configuration utility, things very well might break!</p> <p>IMPORTANT</p>"},{"location":"scenery/#configuring-scenery_packsini","title":"Configuring scenery_packs.ini","text":"<p>Any scenery added to XPlane requires being setup in the scenery_packs.ini file located in your installs 'Custom Scenery' directory.</p> <p>This file is order dependent where higher priority layers are towards the top of the file and lower priority items are towards the bottom.</p> <p>On initial run of XPlane after installing new scenery, these layers will automatically be added to your scenery_packs.ini file, but likely in an incorrect location.</p> <p>This can result in strange issues, such as having no roads, buildings, or trees when flying with XPlane.  If this is the case, double check the order of files in scenery_packs.ini.</p> <p>This tool will download and setup numerous directories in your 'Custom Scenery' folder of the form:  <code>z_ao_&lt;short name of scenery pack&gt;</code> and a directory named <code>yAutoOrtho_Overlays</code>.  Typically these should be listed towards the bottom of your scenery_packs.ini file:</p> <pre><code>Landmarks, airports, etc\nsimHeaven, special layers, etc\nyAutoOrtho_Overlays\nz_ao_aus_pac\nz_ao_eur\nz_ao_na\nz_autoortho\nzzz_global_scenery\n</code></pre>"},{"location":"scenery/#installing-in-custom-directories","title":"Installing in custom directories","text":"<p>It is possible to install scenery into directories other than X-Plane's Custom Scenery directory.  </p> <p>You should have a good understanding of how X-Plane handles custom scenery before attempting this!</p> <ol> <li>This will require that you configure AutoOrtho to point the 'Custom Scenery' setting to this alternative directory.</li> <li>Setup and install scenery as per normal.  Run the program at least once to    create the mount points.  You should see folder that correspond to the    installed packages now in the alternative directory that was setup.  The    format will look like <code>z_ao_XXXX</code></li> <li>You will then need to manually link each of the resulting mount directories to X-Planes's origin Custom Scenery dir.    On Linux you can use a symlink.  On Windows you can create a shortcut.</li> <li>Make sure Autoortho is running and start X-Plane.  Double check your    <code>scenery_packs.ini</code> file to assure the directories are seen.</li> </ol>"}]}